// üçΩÔ∏è La Oaxaque√±aca - Configuraci√≥n
// Archivo de configuraci√≥n centralizada para la aplicaci√≥n

const CONFIG = {
  // Informaci√≥n del restaurante
  restaurant: {
    name: 'La Oaxaque√±aca',
    tagline: 'Aut√©ntica comida mexicana',
    description: 'Men√∫ digital de La Oaxaque√±aca con tacos, quesadillas, burritos y m√°s platillos mexicanos aut√©nticos',
    version: '2.0.0'
  },

  // Configuraci√≥n de la aplicaci√≥n
  app: {
    maxItemsPerCart: 99,
    searchDebounceMs: 300,
    notificationDuration: 2000,
    localStorageKey: 'oaxaquenaca-cart'
  },

  // Configuraci√≥n de precios
  pricing: {
    currency: 'USD',
    currencySymbol: '$',
    decimalPlaces: 2
  },

  // Configuraci√≥n de categor√≠as
  categories: [
    { id: 'all', name: 'Todos', color: '#d33a2d' },
    { id: 'Tacos', name: 'Tacos', color: '#ff6b35' },
    { id: 'Quesadillas', name: 'Quesadillas', color: '#ffab40' },
    { id: 'Burritos', name: 'Burritos', color: '#4CAF50' },
    { id: 'Appetizers', name: 'Appetizers', color: '#9C27B0' }
  ],

  // Configuraci√≥n de filtros de precio
  priceRanges: [
    { id: 'all', name: 'Todos los precios', min: 0, max: null },
    { id: '0-5', name: 'Menos de $5', min: 0, max: 5 },
    { id: '5-8', name: '$5 - $8', min: 5, max: 8 },
    { id: '8+', name: 'M√°s de $8', min: 8, max: null }
  ],

  // Configuraci√≥n de ordenamiento
  sortOptions: [
    { id: 'name', name: 'Por nombre', field: 'name' },
    { id: 'price-low', name: 'Precio: menor a mayor', field: 'price', order: 'asc' },
    { id: 'price-high', name: 'Precio: mayor a menor', field: 'price', order: 'desc' },
    { id: 'prep-time', name: 'Tiempo de preparaci√≥n', field: 'prepTime' }
  ],

  // Configuraci√≥n de al√©rgenos
  allergens: {
    'Gluten': { name: 'Gluten', icon: 'üåæ', description: 'Contiene trigo, cebada o centeno' },
    'L√°cteos': { name: 'L√°cteos', icon: 'ü•õ', description: 'Contiene leche o derivados l√°cteos' },
    'Nueces': { name: 'Nueces', icon: 'ü•ú', description: 'Contiene frutos secos' },
    'Mariscos': { name: 'Mariscos', icon: 'ü¶ê', description: 'Contiene mariscos' },
    'Huevos': { name: 'Huevos', icon: 'ü•ö', description: 'Contiene huevos' },
    'Soya': { name: 'Soya', icon: 'ü´ò', description: 'Contiene soya' }
  },

  // Configuraci√≥n de animaciones
  animations: {
    duration: {
      fast: 200,
      normal: 300,
      slow: 500
    },
    easing: {
      smooth: 'cubic-bezier(0.4, 0, 0.2, 1)',
      bounce: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)'
    }
  },

  // Configuraci√≥n de breakpoints responsive
  breakpoints: {
    mobile: 480,
    tablet: 768,
    desktop: 1024,
    wide: 1200
  },

  // Configuraci√≥n de colores
  colors: {
    primary: '#d33a2d',
    secondary: '#ff6b35',
    accent: '#ffab40',
    success: '#4CAF50',
    warning: '#ff9800',
    error: '#f44336',
    info: '#2196F3',
    background: '#f0f2f5',
    surface: '#ffffff',
    text: {
      primary: '#333333',
      secondary: '#666666',
      disabled: '#999999'
    }
  },

  // Configuraci√≥n de atajos de teclado
  shortcuts: {
    search: { key: 'k', ctrl: true, description: 'Enfocar b√∫squeda' },
    clearSearch: { key: 'l', ctrl: true, description: 'Limpiar b√∫squeda' },
    closeModal: { key: 'Escape', description: 'Cerrar modal' },
    openCart: { key: 'c', ctrl: true, description: 'Abrir carrito' }
  },

  // Configuraci√≥n de mensajes
  messages: {
    cart: {
      empty: 'Tu carrito est√° vac√≠o',
      added: '‚úÖ {product} agregado al carrito',
      removed: '‚ùå {product} removido del carrito',
      updated: 'üîÑ Cantidad actualizada',
      cleared: 'üóëÔ∏è Carrito limpiado'
    },
    search: {
      noResults: 'No se encontraron productos que coincidan con tu b√∫squeda.',
      suggestions: 'Intenta con otros t√©rminos o categor√≠as.',
      placeholder: 'üîç Buscar platillos...'
    },
    checkout: {
      confirm: '¬øConfirmar orden por ${total}?',
      success: '¬°Gracias por tu orden! Esta funcionalidad estar√° disponible pronto.',
      empty: 'Tu carrito est√° vac√≠o'
    }
  },

  // Configuraci√≥n de validaciones
  validation: {
    minQuantity: 1,
    maxQuantity: 99,
    minSearchLength: 1,
    maxSearchLength: 100
  },

  // Configuraci√≥n de desarrollo
  development: {
    debug: false,
    showStats: true,
    enableLogging: true,
    mockData: false
  }
};

// Funci√≥n para obtener configuraci√≥n
function getConfig(path) {
  return path.split('.').reduce((obj, key) => obj?.[key], CONFIG);
}

// Funci√≥n para actualizar configuraci√≥n
function updateConfig(path, value) {
  const keys = path.split('.');
  const lastKey = keys.pop();
  const target = keys.reduce((obj, key) => obj[key], CONFIG);
  if (target && lastKey) {
    target[lastKey] = value;
  }
}

// Funci√≥n para formatear precio
function formatPrice(price) {
  const { currencySymbol, decimalPlaces } = CONFIG.pricing;
  return `${currencySymbol}${price.toFixed(decimalPlaces)}`;
}

// Funci√≥n para obtener mensaje
function getMessage(path, replacements = {}) {
  let message = getConfig(`messages.${path}`);
  if (!message) return '';
  
  // Reemplazar placeholders
  Object.entries(replacements).forEach(([key, value]) => {
    message = message.replace(`{${key}}`, value);
  });
  
  return message;
}

// Funci√≥n para validar cantidad
function validateQuantity(quantity) {
  const { minQuantity, maxQuantity } = CONFIG.validation;
  return Math.max(minQuantity, Math.min(maxQuantity, quantity));
}

// Funci√≥n para obtener al√©rgenos formateados
function formatAllergens(allergens) {
  return allergens.map(allergen => {
    const info = CONFIG.allergens[allergen];
    return info ? `${info.icon} ${info.name}` : allergen;
  }).join(', ');
}

// Exportar configuraci√≥n y utilidades
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { CONFIG, getConfig, updateConfig, formatPrice, getMessage, validateQuantity, formatAllergens };
} else {
  window.CONFIG = CONFIG;
  window.getConfig = getConfig;
  window.updateConfig = updateConfig;
  window.formatPrice = formatPrice;
  window.getMessage = getMessage;
  window.validateQuantity = validateQuantity;
  window.formatAllergens = formatAllergens;
}

